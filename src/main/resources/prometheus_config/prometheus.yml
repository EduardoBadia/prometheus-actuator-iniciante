# O intuito deste arquivo é fazer com que o prometheus enxergue o actuator

global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=` to any time series scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    # no comando do docker, esta é a porta do container prometheus que é mapeada
    # para outra porta tipo 9092
    static_configs:
      - targets: ['localhost:9090']

  # Details to connect Prometheus with Spring Boot actuator end point to scrap the data
  # The job name is added as a label `job=` to any time series scraped from this config.
  - job_name: 'spring-actuator'
   
    # Actuator end point to collect the data. 
    metrics_path: '/actuator/prometheus'

    #How frequently to scape the data from the end point
    scrape_interval: 5s

    # essa aqui é a porta do actuator. O prometheus reconhece que a aplicação está rodando nesta porta
    # foi trocado HOST_IP por host.docker.internal
    #localhost if not using the Docker.
    static_configs:
       - targets: ['host.docker.internal:8080']